/* some words; */
another line();
a = "string const"
"\n\n/**\n * Implements the Square Dance game.\n * This simple game allows the user to move a black square around\n * the screen, and change the square's size during the movement.\n * When the game starts, a square of 30 by 30 pixels is shown at the\n * top-left corner of the screen. The user controls the square as follows.\n * The 4 arrow keys are used to move the square up, down, left, and right.\n * The 'z' and 'x' keys are used, respectively, to decrement and increment\n * the square's size. The 'q' key is used to quit the game.\n */\n\nclass SquareGame {\n   field Square square;    field int direction;                         \n   \n   constructor SquareGame new() {\n                  let square = Square.new(0, 0, 30);\n      let direction = 0;        return this;\n   }\n\n   \n   method void dispose() {\n      do square.dispose();\n      do Memory.deAlloc(this);\n      return;\n   }\n\n   \n   method void moveSquare() {\n      if (direction = 1) { do square.moveUp(); }\n      if (direction = 2) { do square.moveDown(); }\n      if (direction = 3) { do square.moveLeft(); }\n      if (direction = 4) { do square.moveRight(); }\n      do Sys.wait(5);        return;\n   }\n\n   \n   method void run() {\n      var char key;        var boolean exit;\n      let exit = false;\n      \n      while (~exit) {\n                  while (key = 0) {\n            let key = Keyboard.keyPressed();\n            do moveSquare();\n         }\n         if (key = 81)  { let exit = true; }              if (key = 90)  { do square.decSize(); }          if (key = 88)  { do square.incSize(); }          if (key = 131) { let direction = 1; }            if (key = 133) { let direction = 2; }            if (key = 130) { let direction = 3; }            if (key = 132) { let direction = 4; }   \n                  while (~(key = 0)) {\n            let key = Keyboard.keyPressed();\n            do moveSquare();\n         }\n     }      return;\n   }\n}\n\n\n\n"
"\n\n/**\n * Implements the Square Dance game.\n * This simple game allows the user to move a black square around\n * the screen, and change the square's size during the movement.\n * When the game starts, a square of 30 by 30 pixels is shown at the\n * top-left corner of the screen. The user controls the square as follows.\n * The 4 arrow keys are used to move the square up, down, left, and right.\n * The 'z' and 'x' keys are used, respectively, to decrement and increment\n * the square's size. The 'q' key is used to quit the game.\n */\n\nclass SquareGame {\n   field Square square;    field int direction;                         \n   /** Constructs a new Square Game. */\n   constructor SquareGame new() {\n                  let square = Square.new(0, 0, 30);\n      let direction = 0;        return this;\n   }\n\n   /** Disposes this game. */\n   method void dispose() {\n      do square.dispose();\n      do Memory.deAlloc(this);\n      return;\n   }\n\n   /** Moves the square in the current direction. */\n   method void moveSquare() {\n      if (direction = 1) { do square.moveUp(); }\n      if (direction = 2) { do square.moveDown(); }\n      if (direction = 3) { do square.moveLeft(); }\n      if (direction = 4) { do square.moveRight(); }\n      do Sys.wait(5);        return;\n   }\n\n   /** Runs the game: handles the user's inputs and moves the square accordingly */\n   method void run() {\n      var char key;        var boolean exit;\n      let exit = false;\n      \n      while (~exit) {\n                  while (key = 0) {\n            let key = Keyboard.keyPressed();\n            do moveSquare();\n         }\n         if (key = 81)  { let exit = true; }              if (key = 90)  { do square.decSize(); }          if (key = 88)  { do square.incSize(); }          if (key = 131) { let direction = 1; }            if (key = 133) { let direction = 2; }            if (key = 130) { let direction = 3; }            if (key = 132) { let direction = 4; }   \n                  while (~(key = 0)) {\n            let key = Keyboard.keyPressed();\n            do moveSquare();\n         }\n     }      return;\n   }\n}\n\n\n\n"